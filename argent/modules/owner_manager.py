import asyncio
import time
from datetime import datetime, timedelta
from argent.core.loader import ArgentModule

class OwnerManagerModule(ArgentModule):
    __version__ = '1.0.0'
    __author__ = 'github.com/lonly19/Argent-Userbot'
    __category__ = 'admin'

    def __init__(self):
        super().__init__()
        self.description = 'üëë –†–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–≤–Ω–µ—Ä–∞–º–∏ –∏ –ø—Ä–∞–≤–∞–º–∏ –¥–æ—Å—Ç—É–ø–∞'
        self.register_command('giveowner', self.cmd_give_owner, 'üëë –í—ã–¥–∞—Ç—å –æ–≤–Ω–µ—Ä–∫—É')
        self.register_command('removeowner', self.cmd_remove_owner, '‚ùå –ó–∞–±—Ä–∞—Ç—å –æ–≤–Ω–µ—Ä–∫—É')
        self.register_command('ownerlist', self.cmd_owner_list, 'üìã –°–ø–∏—Å–æ–∫ –æ–≤–Ω–µ—Ä–æ–≤')
        self.register_command('tempowner', self.cmd_temp_owner, '‚è∞ –í—Ä–µ–º–µ–Ω–Ω–∞—è –æ–≤–Ω–µ—Ä–∫–∞')
        self.register_command('ownerinfo', self.cmd_owner_info, '‚ÑπÔ∏è –Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ–≤–Ω–µ—Ä–µ')
        self.register_command('permissions', self.cmd_permissions, 'üîê –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤–∞–º–∏')
        self.register_command('sudo', self.cmd_sudo, 'üîß –í—ã–ø–æ–ª–Ω–∏—Ç—å –æ—Ç –∏–º–µ–Ω–∏ –æ–≤–Ω–µ—Ä–∞')
        self.register_command('ownerlog', self.cmd_owner_log, 'üìä –õ–æ–≥ –¥–µ–π—Å—Ç–≤–∏–π –æ–≤–Ω–µ—Ä–æ–≤')

    async def on_load(self):
        me = await self.client.get_me()
        owners = self.db.get_config('owners', [])
        if me.id not in owners:
            owners.append(me.id)
            self.db.set_config('owners', owners)
        if not self.db.get_config('owner_permissions'):
            self.db.set_config('owner_permissions', {})
        if not self.db.get_config('owner_logs'):
            self.db.set_config('owner_logs', [])

    def _is_owner(self, user_id: int) -> bool:
        owners = self.db.get_config('owners', [])
        return user_id in owners

    def _is_main_owner(self, user_id: int) -> bool:
        owners = self.db.get_config('owners', [])
        return len(owners) > 0 and owners[0] == user_id

    def _has_permission(self, user_id: int, permission: str) -> bool:
        if self._is_main_owner(user_id):
            return True
        permissions = self.db.get_config('owner_permissions', {})
        user_perms = permissions.get(str(user_id), [])
        return permission in user_perms or 'all' in user_perms

    def _log_action(self, user_id: int, action: str, target: str=None):
        logs = self.db.get_config('owner_logs', [])
        log_entry = {'user_id': user_id, 'action': action, 'target': target, 'timestamp': time.time(), 'date': datetime.now().strftime('%Y-%m-%d %H:%M:%S')}
        logs.append(log_entry)
        if len(logs) > 100:
            logs = logs[-100:]
        self.db.set_config('owner_logs', logs)

    async def cmd_give_owner(self, event, args):
        if not self._is_owner(event.sender_id):
            await event.edit('‚ùå <b>–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω:</b> –¢–æ–ª—å–∫–æ –æ–≤–Ω–µ—Ä—ã –º–æ–≥—É—Ç –≤—ã–¥–∞–≤–∞—Ç—å –æ–≤–Ω–µ—Ä–∫—É')
            return
        if not event.is_reply:
            await event.edit('‚ùå <b>–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –≤—ã–¥–∞—á–∏ –æ–≤–Ω–µ—Ä–∫–∏</b>')
            return
        reply_msg = await event.get_reply_message()
        user_id = reply_msg.sender_id
        owners = self.db.get_config('owners', [])
        if user_id in owners:
            await event.edit('‚ö†Ô∏è <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —è–≤–ª—è–µ—Ç—Å—è –æ–≤–Ω–µ—Ä–æ–º</b>')
            return
        owners.append(user_id)
        self.db.set_config('owners', owners)
        permissions = self.db.get_config('owner_permissions', {})
        permissions[str(user_id)] = ['modules', 'system', 'admin']
        self.db.set_config('owner_permissions', permissions)
        self._log_action(event.sender_id, 'give_owner', str(user_id))
        user_info = await self.utils.get_user_info(user_id)
        username = user_info.get('username', 'Unknown') if user_info else 'Unknown'
        first_name = user_info.get('first_name', 'Unknown') if user_info else 'Unknown'
        await event.edit(f'\n\nüëë <b>–û–≤–Ω–µ—Ä–∫–∞ –≤—ã–¥–∞–Ω–∞</b>\n\n<b>üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> {first_name} (@{username})\n\n<b>üÜî ID:</b> <code>{user_id}</code>\n\n<b>‚öõÔ∏è –°—Ç–∞—Ç—É—Å:</b> –ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω\n\n<b>üîê –ü—Ä–∞–≤–∞:</b> –ú–æ–¥—É–ª–∏, –°–∏—Å—Ç–µ–º–∞, –ê–¥–º–∏–Ω\n\n<b>üî¨ –í—ã–¥–∞–ª:</b> –í—ã\n\n<b>üìä –í—Å–µ–≥–æ –æ–≤–Ω–µ—Ä–æ–≤:</b> <code>{len(owners)}</code>\n\n<b>ü§ñ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∏—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ inline –±–æ—Ç–µ</b>\n\n        ')
        try:
            if hasattr(self, 'client') and hasattr(self.client, 'inline_bot'):
                await self.client.inline_bot.bot.send_message(user_id, f'\n\nüéâ <b>–í–∞–º –≤—ã–¥–∞–Ω–∞ –æ–≤–Ω–µ—Ä–∫–∞ Argent UserBot!</b>\n\n<b>‚öóÔ∏è –¢–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫:</b>\n\n‚Ä¢ üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–æ–¥—É–ª—è–º–∏\n\n‚Ä¢ ‚öôÔ∏è –°–∏—Å—Ç–µ–º–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏\n\n‚Ä¢ üëë –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏\n\n<b>üî¨ —Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã –≤ —á–∞—Ç–∞—Ö –∏–ª–∏ —ç—Ç–æ—Ç –±–æ—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è</b>\n\n                    ')
        except:
            pass

    async def cmd_remove_owner(self, event, args):
        if not self._is_owner(event.sender_id):
            await event.edit('‚ùå <b>–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω:</b> –¢–æ–ª—å–∫–æ –æ–≤–Ω–µ—Ä—ã –º–æ–≥—É—Ç –∑–∞–±–∏—Ä–∞—Ç—å –æ–≤–Ω–µ—Ä–∫—É')
            return
        if not event.is_reply:
            await event.edit('‚ùå <b>–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –æ–≤–Ω–µ—Ä–∫–∏</b>')
            return
        reply_msg = await event.get_reply_message()
        user_id = reply_msg.sender_id
        owners = self.db.get_config('owners', [])
        if self._is_main_owner(user_id):
            await event.edit('‚ùå <b>–ù–µ–ª—å–∑—è —É–¥–∞–ª–∏—Ç—å –≥–ª–∞–≤–Ω–æ–≥–æ –æ–≤–Ω–µ—Ä–∞</b>')
            return
        if user_id == event.sender_id and (not self._is_main_owner(event.sender_id)):
            await event.edit('‚ùå <b>–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —É–¥–∞–ª–∏—Ç—å —Å–µ–±—è</b>')
            return
        if user_id not in owners:
            await event.edit('‚ö†Ô∏è <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –æ–≤–Ω–µ—Ä–æ–º</b>')
            return
        owners.remove(user_id)
        self.db.set_config('owners', owners)
        permissions = self.db.get_config('owner_permissions', {})
        permissions.pop(str(user_id), None)
        self.db.set_config('owner_permissions', permissions)
        self._log_action(event.sender_id, 'remove_owner', str(user_id))
        user_info = await self.utils.get_user_info(user_id)
        username = user_info.get('username', 'Unknown') if user_info else 'Unknown'
        first_name = user_info.get('first_name', 'Unknown') if user_info else 'Unknown'
        await event.edit(f'\n\n‚ùå <b>–û–≤–Ω–µ—Ä–∫–∞ –æ—Ç–æ–∑–≤–∞–Ω–∞</b>\n\n<b>üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> {first_name} (@{username})\n\n<b>üÜî ID:</b> <code>{user_id}</code>\n\n<b>‚öõÔ∏è –°—Ç–∞—Ç—É—Å:</b> –î–æ—Å—Ç—É–ø –æ—Ç–æ–∑–≤–∞–Ω\n\n<b>üî¨ –£–¥–∞–ª–∏–ª:</b> –í—ã\n\n<b>üìä –û—Å—Ç–∞–ª–æ—Å—å –æ–≤–Ω–µ—Ä–æ–≤:</b> <code>{len(owners)}</code>\n\n        ')

    async def cmd_owner_list(self, event, args):
        owners = self.db.get_config('owners', [])
        permissions = self.db.get_config('owner_permissions', {})
        if not owners:
            await event.edit('üë• <b>–°–ø–∏—Å–æ–∫ –æ–≤–Ω–µ—Ä–æ–≤ –ø—É—Å—Ç</b>')
            return
        owners_text = 'üëë <b>–°–ø–∏—Å–æ–∫ –æ–≤–Ω–µ—Ä–æ–≤ —Å–∏—Å—Ç–µ–º—ã</b>\n\n'
        for i, owner_id in enumerate(owners, 1):
            try:
                user_info = await self.utils.get_user_info(owner_id)
                if user_info:
                    username = user_info.get('username', 'Unknown')
                    first_name = user_info.get('first_name', 'Unknown')
                else:
                    username = 'Unknown'
                    first_name = 'Unknown'
                user_perms = permissions.get(str(owner_id), [])
                perm_text = ', '.join(user_perms) if user_perms else '–ë–∞–∑–æ–≤—ã–µ'
                status = 'üî± –ì–ª–∞–≤–Ω—ã–π' if i == 1 else 'üëë –û–≤–Ω–µ—Ä'
                owners_text += f'\n\n<b>{i}.</b> {first_name} (@{username})\n\n‚Ä¢ <b>ID:</b> <code>{owner_id}</code>\n\n‚Ä¢ <b>–°—Ç–∞—Ç—É—Å:</b> {status}\n\n‚Ä¢ <b>–ü—Ä–∞–≤–∞:</b> {perm_text}\n\n'
            except Exception as e:
                owners_text += f'<b>{i}.</b> Unknown User (<code>{owner_id}</code>)\n\n'
        owners_text += f'<b>üî¨ –í—Å–µ–≥–æ –æ–≤–Ω–µ—Ä–æ–≤:</b> <code>{len(owners)}</code>'
        await event.edit(owners_text)

    async def cmd_temp_owner(self, event, args):
        if not self._is_owner(event.sender_id):
            await event.edit('‚ùå <b>–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω:</b> –¢–æ–ª—å–∫–æ –æ–≤–Ω–µ—Ä—ã –º–æ–≥—É—Ç –≤—ã–¥–∞–≤–∞—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—É—é –æ–≤–Ω–µ—Ä–∫—É')
            return
        if not event.is_reply or not args:
            await event.edit('‚ùå <b>–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:</b> –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —É–∫–∞–∂–∏—Ç–µ –≤—Ä–µ–º—è (–Ω–∞–ø—Ä–∏–º–µ—Ä: 1h, 30m, 2d)')
            return
        reply_msg = await event.get_reply_message()
        user_id = reply_msg.sender_id
        duration_str = args[0]
        duration = self.utils.parse_duration(duration_str)
        if not duration:
            await event.edit('‚ùå <b>–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏</b>\n\n–ü—Ä–∏–º–µ—Ä—ã: 1h, 30m, 2d, 1w')
            return
        owners = self.db.get_config('owners', [])
        if user_id in owners:
            await event.edit('‚ö†Ô∏è <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —è–≤–ª—è–µ—Ç—Å—è –æ–≤–Ω–µ—Ä–æ–º</b>')
            return
        temp_owners = self.db.get_config('temp_owners', {})
        expire_time = time.time() + duration
        temp_owners[str(user_id)] = {'expire_time': expire_time, 'granted_by': event.sender_id, 'granted_at': time.time()}
        self.db.set_config('temp_owners', temp_owners)
        owners.append(user_id)
        self.db.set_config('owners', owners)
        permissions = self.db.get_config('owner_permissions', {})
        permissions[str(user_id)] = ['modules']
        self.db.set_config('owner_permissions', permissions)
        self._log_action(event.sender_id, 'temp_owner', f'{user_id}:{duration_str}')
        asyncio.create_task(self._remove_temp_owner_after(user_id, duration))
        user_info = await self.utils.get_user_info(user_id)
        username = user_info.get('username', 'Unknown') if user_info else 'Unknown'
        first_name = user_info.get('first_name', 'Unknown') if user_info else 'Unknown'
        expire_date = datetime.fromtimestamp(expire_time).strftime('%Y-%m-%d %H:%M:%S')
        await event.edit(f'\n\n‚è∞ <b>–í—Ä–µ–º–µ–Ω–Ω–∞—è –æ–≤–Ω–µ—Ä–∫–∞ –≤—ã–¥–∞–Ω–∞</b>\n\n<b>üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> {first_name} (@{username})\n\n<b>üÜî ID:</b> <code>{user_id}</code>\n\n<b>‚è±Ô∏è –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:</b> {self.utils.format_duration(duration)}\n\n<b>üìÖ —Å—Ç–µ–∫–∞–µ—Ç:</b> {expire_date}\n\n<b>üîê –ü—Ä–∞–≤–∞:</b> –¢–æ–ª—å–∫–æ –º–æ–¥—É–ª–∏\n\n<b>üî¨ –í—ã–¥–∞–ª:</b> –í—ã\n\n<b>‚öõÔ∏è –î–æ—Å—Ç—É–ø –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–æ–∑–≤–∞–Ω</b>\n\n        ')

    async def _remove_temp_owner_after(self, user_id: int, duration: int):
        await asyncio.sleep(duration)
        owners = self.db.get_config('owners', [])
        if user_id in owners:
            owners.remove(user_id)
            self.db.set_config('owners', owners)
        permissions = self.db.get_config('owner_permissions', {})
        permissions.pop(str(user_id), None)
        self.db.set_config('owner_permissions', permissions)
        temp_owners = self.db.get_config('temp_owners', {})
        temp_owners.pop(str(user_id), None)
        self.db.set_config('temp_owners', temp_owners)
        try:
            await self.client.send_message(user_id, '‚è∞ <b>–í—Ä–µ–º–µ–Ω–Ω–∞—è –æ–≤–Ω–µ—Ä–∫–∞ –∏—Å—Ç–µ–∫–ª–∞</b>\n\nüîí –í–∞—à –¥–æ—Å—Ç—É–ø –∫ Argent UserBot –æ—Ç–æ–∑–≤–∞–Ω')
        except:
            pass

    async def cmd_owner_info(self, event, args):
        if not event.is_reply:
            await event.edit('‚ùå <b>–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b>')
            return
        reply_msg = await event.get_reply_message()
        user_id = reply_msg.sender_id
        owners = self.db.get_config('owners', [])
        if user_id not in owners:
            await event.edit('‚ùå <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –æ–≤–Ω–µ—Ä–æ–º</b>')
            return
        user_info = await self.utils.get_user_info(user_id)
        username = user_info.get('username', 'Unknown') if user_info else 'Unknown'
        first_name = user_info.get('first_name', 'Unknown') if user_info else 'Unknown'
        permissions = self.db.get_config('owner_permissions', {})
        user_perms = permissions.get(str(user_id), [])
        temp_owners = self.db.get_config('temp_owners', {})
        is_temp = str(user_id) in temp_owners
        logs = self.db.get_config('owner_logs', [])
        user_logs = [log for log in logs if log['user_id'] == user_id]
        info_text = f"\n\n‚ÑπÔ∏è <b>–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ–≤–Ω–µ—Ä–µ</b>\n\n<b>üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> {first_name} (@{username})\n\n<b>üÜî ID:</b> <code>{user_id}</code>\n\n<b>üëë –°—Ç–∞—Ç—É—Å:</b> {('üî± –ì–ª–∞–≤–Ω—ã–π –æ–≤–Ω–µ—Ä' if self._is_main_owner(user_id) else 'üëë –û–≤–Ω–µ—Ä')}\n\n<b>‚è∞ –¢–∏–ø:</b> {('–í—Ä–µ–º–µ–Ω–Ω—ã–π' if is_temp else '–ü–æ—Å—Ç–æ—è–Ω–Ω—ã–π')}\n\n<b>üîê –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞:</b>\n\n{(chr(10).join([f'‚Ä¢ {perm}' for perm in user_perms]) if user_perms else '‚Ä¢ –ë–∞–∑–æ–≤—ã–µ –ø—Ä–∞–≤–∞')}\n\n<b>üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>\n\n‚Ä¢ <b>–î–µ–π—Å—Ç–≤–∏–π –≤—ã–ø–æ–ª–Ω–µ–Ω–æ:</b> {len(user_logs)}\n\n‚Ä¢ <b>–ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:</b> {(user_logs[-1]['date'] if user_logs else '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö')}\n\n        "
        if is_temp:
            temp_info = temp_owners[str(user_id)]
            expire_time = temp_info['expire_time']
            remaining = expire_time - time.time()
            if remaining > 0:
                info_text += f'\n<b>‚è∞ –û—Å—Ç–∞–µ—Ç—Å—è –≤—Ä–µ–º–µ–Ω–∏:</b> {self.utils.format_duration(remaining)}'
            else:
                info_text += '\n<b>‚è∞ –í—Ä–µ–º—è –∏—Å—Ç–µ–∫–ª–æ</b> (–æ–∂–∏–¥–∞–µ—Ç —É–¥–∞–ª–µ–Ω–∏—è)'
        await event.edit(info_text)

    async def cmd_permissions(self, event, args):
        if not self._is_main_owner(event.sender_id):
            await event.edit('‚ùå <b>–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω:</b> –¢–æ–ª—å–∫–æ –≥–ª–∞–≤–Ω—ã–π –æ–≤–Ω–µ—Ä –º–æ–∂–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –ø—Ä–∞–≤–∞–º–∏')
            return
        if not args:
            await event.edit('\n\nüîê **–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤–∞–º–∏ –¥–æ—Å—Ç—É–ø–∞**\n\n**üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–∞–≤–∞:**\n\n‚Ä¢ `all` - –≤—Å–µ –ø—Ä–∞–≤–∞\n\n‚Ä¢ `modules` - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–æ–¥—É–ª—è–º–∏\n\n‚Ä¢ `system` - —Å–∏—Å—Ç–µ–º–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏\n\n‚Ä¢ `admin` - –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏\n\n‚Ä¢ `owner` - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–≤–Ω–µ—Ä–∞–º–∏\n\n**üîß –ö–æ–º–∞–Ω–¥—ã:**\n\n‚Ä¢ `.permissions list` - —Å–ø–∏—Å–æ–∫ –ø—Ä–∞–≤ –≤—Å–µ—Ö –æ–≤–Ω–µ—Ä–æ–≤\n\n‚Ä¢ `.permissions <user_id> <–ø—Ä–∞–≤–∞>` - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∞–≤–∞\n\n‚Ä¢ `.permissions <user_id> remove <–ø—Ä–∞–≤–æ>` - —É–¥–∞–ª–∏—Ç—å –ø—Ä–∞–≤–æ\n\n**üí° –ü—Ä–∏–º–µ—Ä:** `.permissions 123456789 modules system`\n\n            ')
            return
        if args[0] == 'list':
            permissions = self.db.get_config('owner_permissions', {})
            perm_text = 'üîê <b>–ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –æ–≤–Ω–µ—Ä–æ–≤</b>\n\n'
            for user_id, perms in permissions.items():
                try:
                    user_info = await self.utils.get_user_info(int(user_id))
                    username = user_info.get('username', 'Unknown') if user_info else 'Unknown'
                    perm_text += f'<b>@{username}</b> (<code>{user_id}</code>):\n'
                    perm_text += f"‚Ä¢ {', '.join(perms)}\n\n"
                except:
                    perm_text += f'<b>Unknown</b> (<code>{user_id}</code>):\n'
                    perm_text += f"‚Ä¢ {', '.join(perms)}\n\n"
            await event.edit(perm_text)
            return
        try:
            user_id = int(args[0])
            new_perms = args[1:]
            if 'remove' in new_perms:
                perm_to_remove = new_perms[new_perms.index('remove') + 1]
                permissions = self.db.get_config('owner_permissions', {})
                user_perms = permissions.get(str(user_id), [])
                if perm_to_remove in user_perms:
                    user_perms.remove(perm_to_remove)
                    permissions[str(user_id)] = user_perms
                    self.db.set_config('owner_permissions', permissions)
                    await event.edit(f'‚úÖ <b>–ü—Ä–∞–≤–æ <code>{perm_to_remove}</code> —É–¥–∞–ª–µ–Ω–æ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <code>{user_id}</code></b>')
                else:
                    await event.edit(f'‚ùå <b>–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –ø—Ä–∞–≤–∞ <code>{perm_to_remove}</code></b>')
            else:
                permissions = self.db.get_config('owner_permissions', {})
                permissions[str(user_id)] = new_perms
                self.db.set_config('owner_permissions', permissions)
                await event.edit(f"\n\n‚úÖ <b>–ü—Ä–∞–≤–∞ –æ–±–Ω–æ–≤–ª–µ–Ω—ã</b>\n\n<b>üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> <code>{user_id}</code>\n\n<b>üîê –ù–æ–≤—ã–µ –ø—Ä–∞–≤–∞:</b> {', '.join(new_perms)}\n\n                ")
        except (ValueError, IndexError):
            await event.edit('‚ùå <b>–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã</b>')

    async def cmd_sudo(self, event, args):
        if not args:
            await event.edit('‚ùå **–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:** `.sudo <–∫–æ–º–∞–Ω–¥–∞>`')
            return
        if not self._is_owner(event.sender_id):
            await event.edit('‚ùå <b>–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω:</b> –¢–æ–ª—å–∫–æ –æ–≤–Ω–µ—Ä—ã –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å sudo')
            return
        command = ' '.join(args)
        self._log_action(event.sender_id, 'sudo', command)
        await event.edit(f'üîß <b>–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Å –ø—Ä–∞–≤–∞–º–∏ –æ–≤–Ω–µ—Ä–∞:</b>\n\n<code>{command}</code>')

    async def cmd_owner_log(self, event, args):
        if not self._is_owner(event.sender_id):
            await event.edit('‚ùå <b>–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω:</b> –¢–æ–ª—å–∫–æ –æ–≤–Ω–µ—Ä—ã –º–æ–≥—É—Ç –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –ª–æ–≥–∏')
            return
        logs = self.db.get_config('owner_logs', [])
        if not logs:
            await event.edit('üìä <b>–õ–æ–≥ –¥–µ–π—Å—Ç–≤–∏–π –ø—É—Å—Ç</b>')
            return
        recent_logs = logs[-10:]
        log_text = 'üìä <b>–õ–æ–≥ –¥–µ–π—Å—Ç–≤–∏–π –æ–≤–Ω–µ—Ä–æ–≤</b>\n\n'
        for log in reversed(recent_logs):
            try:
                user_info = await self.utils.get_user_info(log['user_id'])
                username = user_info.get('username', 'Unknown') if user_info else 'Unknown'
                log_text += f"""\n\n<b>{log['date']}</b>\n\nüë§ @{username} ({log['user_id']})\n\nüîß {log['action']}\n\n{(f"üéØ {log['target']}" if log.get('target') else '')}\n\n"""
            except:
                log_text += f"\n\n<b>{log['date']}</b>\n\nüë§ Unknown ({log['user_id']})\n\nüîß {log['action']}\n\n"
        log_text += f'<b>üìà –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π:</b> {len(logs)}'
        await event.edit(log_text)
module = OwnerManagerModule()
