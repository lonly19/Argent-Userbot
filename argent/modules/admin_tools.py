import asyncio
from telethon.tl.functions.channels import EditBannedRequest
from telethon.tl.types import ChatBannedRights
from argent.core.loader import ArgentModule

class AdminToolsModule(ArgentModule):
    __version__ = '1.0.0'
    __author__ = 'github.com/lonly19/Argent-Userbot'
    __category__ = 'admin'

    def __init__(self):
        super().__init__()
        self.description = 'üëë –Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –º–æ–¥–µ—Ä–∞—Ü–∏–∏ —á–∞—Ç–æ–≤'
        self.register_command('ban', self.cmd_ban, 'üö´ –ó–∞–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
        self.register_command('unban', self.cmd_unban, '‚úÖ –†–∞–∑–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
        self.register_command('mute', self.cmd_mute, 'üîá –ó–∞–º—É—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
        self.register_command('unmute', self.cmd_unmute, 'üîä –†–∞–∑–º—É—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
        self.register_command('kick', self.cmd_kick, 'üë¢ –ö–∏–∫–Ω—É—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
        self.register_command('purge', self.cmd_purge, 'üßπ –û—á–∏—Å—Ç–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è')
        self.register_command('chatinfo', self.cmd_chatinfo, '‚ÑπÔ∏è –Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —á–∞—Ç–µ')

    async def _get_user_from_message(self, event):
        if event.is_reply:
            reply_msg = await event.get_reply_message()
            return reply_msg.sender_id
        return None

    async def cmd_ban(self, event, args):
        user_id = await self._get_user_from_message(event)
        if not user_id:
            await event.edit('‚ùå <b>–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –±–∞–Ω–∞</b>')
            return
        try:
            ban_rights = ChatBannedRights(until_date=None, view_messages=True, send_messages=True, send_media=True, send_stickers=True, send_gifs=True, send_games=True, send_inline=True, embed_links=True)
            await self.client(EditBannedRequest(channel=event.chat_id, participant=user_id, banned_rights=ban_rights))
            user_info = await self.utils.get_user_info(user_id)
            username = user_info.get('username', 'Unknown') if user_info else 'Unknown'
            await event.edit(f'\n\nüö´ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–∞–Ω–µ–Ω</b>\n\n<b>üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> @{username} (<code>{user_id}</code>)\n\n<b>‚öõÔ∏è –°—Ç–∞—Ç—É—Å:</b> –ü–µ—Ä–º–∞–Ω–µ–Ω—Ç–Ω—ã–π –±–∞–Ω\n\n<b>üî¨ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä:</b> –í—ã\n\n')
        except Exception as e:
            await event.edit(f'‚ùå <b>–û—à–∏–±–∫–∞ –±–∞–Ω–∞:</b> <code>{str(e)}</code>')

    async def cmd_unban(self, event, args):
        user_id = await self._get_user_from_message(event)
        if not user_id:
            await event.edit('‚ùå <b>–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ä–∞–∑–±–∞–Ω–∞</b>')
            return
        try:
            unban_rights = ChatBannedRights(until_date=None, view_messages=False, send_messages=False, send_media=False, send_stickers=False, send_gifs=False, send_games=False, send_inline=False, embed_links=False)
            await self.client(EditBannedRequest(channel=event.chat_id, participant=user_id, banned_rights=unban_rights))
            user_info = await self.utils.get_user_info(user_id)
            username = user_info.get('username', 'Unknown') if user_info else 'Unknown'
            await event.edit(f'\n\n‚úÖ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞–∑–±–∞–Ω–µ–Ω</b>\n\n<b>üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> @{username} (<code>{user_id}</code>)\n\n<b>‚öõÔ∏è –°—Ç–∞—Ç—É—Å:</b> –ë–∞–Ω —Å–Ω—è—Ç\n\n<b>üî¨ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä:</b> –í—ã\n\n')
        except Exception as e:
            await event.edit(f'‚ùå <b>–û—à–∏–±–∫–∞ —Ä–∞–∑–±–∞–Ω–∞:</b> <code>{str(e)}</code>')

    async def cmd_mute(self, event, args):
        user_id = await self._get_user_from_message(event)
        if not user_id:
            await event.edit('‚ùå <b>–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –º—É—Ç–∞</b>')
            return
        duration = None
        if args:
            duration_str = args[0]
            duration = self.utils.parse_duration(duration_str)
        try:
            mute_rights = ChatBannedRights(until_date=int(time.time() + duration) if duration else None, send_messages=True, send_media=True, send_stickers=True, send_gifs=True, send_games=True, send_inline=True, embed_links=True)
            await self.client(EditBannedRequest(channel=event.chat_id, participant=user_id, banned_rights=mute_rights))
            user_info = await self.utils.get_user_info(user_id)
            username = user_info.get('username', 'Unknown') if user_info else 'Unknown'
            duration_text = f'–Ω–∞ {self.utils.format_duration(duration)}' if duration else '–Ω–∞–≤—Å–µ–≥–¥–∞'
            await event.edit(f'\n\nüîá <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–º—É—á–µ–Ω</b>\n\n<b>üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> @{username} (<code>{user_id}</code>)\n\n<b>‚è∞ –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:</b> {duration_text}\n\n<b>üî¨ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä:</b> –í—ã\n\n')
        except Exception as e:
            await event.edit(f'‚ùå <b>–û—à–∏–±–∫–∞ –º—É—Ç–∞:</b> <code>{str(e)}</code>')

    async def cmd_unmute(self, event, args):
        user_id = await self._get_user_from_message(event)
        if not user_id:
            await event.edit('‚ùå <b>–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ä–∞–∑–º—É—Ç–∞</b>')
            return
        try:
            unmute_rights = ChatBannedRights(until_date=None, send_messages=False, send_media=False, send_stickers=False, send_gifs=False, send_games=False, send_inline=False, embed_links=False)
            await self.client(EditBannedRequest(channel=event.chat_id, participant=user_id, banned_rights=unmute_rights))
            user_info = await self.utils.get_user_info(user_id)
            username = user_info.get('username', 'Unknown') if user_info else 'Unknown'
            await event.edit(f'\n\nüîä <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞–∑–º—É—á–µ–Ω</b>\n\n<b>üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> @{username} (<code>{user_id}</code>)\n\n<b>‚öõÔ∏è –°—Ç–∞—Ç—É—Å:</b> –ú—É—Ç —Å–Ω—è—Ç\n\n<b>üî¨ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä:</b> –í—ã\n\n')
        except Exception as e:
            await event.edit(f'‚ùå <b>–û—à–∏–±–∫–∞ —Ä–∞–∑–º—É—Ç–∞:</b> <code>{str(e)}</code>')

    async def cmd_kick(self, event, args):
        user_id = await self._get_user_from_message(event)
        if not user_id:
            await event.edit('‚ùå <b>–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –∫–∏–∫–∞</b>')
            return
        try:
            await self.client.kick_participant(event.chat_id, user_id)
            user_info = await self.utils.get_user_info(user_id)
            username = user_info.get('username', 'Unknown') if user_info else 'Unknown'
            await event.edit(f'\n\nüë¢ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∫–∏–∫–Ω—É—Ç</b>\n\n<b>üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> @{username} (<code>{user_id}</code>)\n\n<b>‚öõÔ∏è –°—Ç–∞—Ç—É—Å:</b> —Å–∫–ª—é—á–µ–Ω –∏–∑ —á–∞—Ç–∞\n\n<b>üî¨ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä:</b> –í—ã\n\n')
        except Exception as e:
            await event.edit(f'‚ùå <b>–û—à–∏–±–∫–∞ –∫–∏–∫–∞:</b> <code>{str(e)}</code>')

    async def cmd_purge(self, event, args):
        if not event.is_reply:
            await event.edit('‚ùå <b>–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ, —Å –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–∞—á–∞—Ç—å –æ—á–∏—Å—Ç–∫—É</b>')
            return
        reply_msg = await event.get_reply_message()
        try:
            messages_to_delete = []
            async for message in self.client.iter_messages(event.chat_id, min_id=reply_msg.id - 1, reverse=True):
                messages_to_delete.append(message.id)
                if len(messages_to_delete) >= 100:
                    break
            if not messages_to_delete:
                await event.edit('‚ùå <b>–ù–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è</b>')
                return
            await self.client.delete_messages(event.chat_id, messages_to_delete)
            await event.edit(f'\n\nüßπ <b>–û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞</b>\n\n<b>üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π:</b> <code>{len(messages_to_delete)}</code>\n\n<b>‚öõÔ∏è –î–∏–∞–ø–∞–∑–æ–Ω:</b> –æ—Ç ID <code>{reply_msg.id}</code> –¥–æ —Ç–µ–∫—É—â–µ–≥–æ\n\n<b>üî¨ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä:</b> –í—ã\n\n')
            await asyncio.sleep(3)
            await event.delete()
        except Exception as e:
            await event.edit(f'‚ùå <b>–û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏:</b> <code>{str(e)}</code>')

    async def cmd_chatinfo(self, event, args):
        try:
            chat_info = await self.utils.get_chat_info(event.chat_id)
            if not chat_info:
                await event.edit('‚ùå <b>–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ</b>')
                return
            chat = await self.client.get_entity(event.chat_id)
            info_text = f"\n\n‚ÑπÔ∏è <b>–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —á–∞—Ç–µ</b>\n\n<b>üìù –ù–∞–∑–≤–∞–Ω–∏–µ:</b> {chat_info.get('title', 'N/A')}\n\n<b>üÜî ID:</b> <code>{chat_info['id']}</code>\n\n<b>üë• –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤:</b> <code>{chat_info.get('participants_count', 'N/A')}</code>\n\n<b>üîó Username:</b> @{chat_info.get('username', '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç')}\n\n<b>‚öõÔ∏è –¢–∏–ø:</b> <code>{chat_info['type']}</code>\n\n<b>üî¨ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ:</b>\n\n‚Ä¢ <b>–û–ø–∏—Å–∞–Ω–∏–µ:</b> {getattr(chat, 'about', '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç')[:100]}...\n\n‚Ä¢ <b>–°–æ–∑–¥–∞–Ω:</b> {getattr(chat, 'date', 'N/A')}\n\n‚Ä¢ <b>–ê–¥–º–∏–Ω-–ø—Ä–∞–≤–∞:</b> {('‚úÖ' if getattr(chat, 'admin_rights', None) else '‚ùå')}\n\n"
            await event.edit(info_text)
        except Exception as e:
            await event.edit(f'‚ùå <b>–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏:</b> <code>{str(e)}</code>')
module = AdminToolsModule()
