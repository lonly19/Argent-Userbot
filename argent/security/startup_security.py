import os
import sys
import logging
from typing import Optional
from .owner_manager import OwnerManager
logger = logging.getLogger(__name__)

class StartupSecurity:

    def __init__(self, config_dir: str='.argent_data'):
        try:
            self.owner_manager = OwnerManager(config_dir)
        except Exception as e:
            logger.error(f'–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ OwnerManager: {e}')
            self.owner_manager = OwnerManager(config_dir)
        self.config_dir = config_dir

    def check_owner_setup(self) -> bool:
        return self.owner_manager.has_primary_owner()

    def get_owner_info(self) -> dict:
        return {'has_owner': self.owner_manager.has_primary_owner(), 'primary_owner_id': self.owner_manager.get_primary_owner(), 'total_owners': len(self.owner_manager.get_all_owners()), 'setup_completed': self.owner_manager.is_setup_completed()}

    def require_owner_setup(self, app_name: str='Argent UserBot') -> bool:
        if not self.check_owner_setup():
            print(f'\nüîê {app_name} - –°–∏—Å—Ç–µ–º–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏')
            print('=' * 50)
            print('‚ùå –í–ª–∞–¥–µ–ª–µ—Ü –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!')
            print('\nüìã –î–ª—è –∑–∞–ø—É—Å–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ:')
            print('1. –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤–µ–±-—É—Å—Ç–∞–Ω–æ–≤—â–∏–∫: python run.py')
            print('2. –í–≤–µ—Å—Ç–∏ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞')
            print('3. –ù–∞–∂–∞—Ç—å /start –≤ Telegram –±–æ—Ç–µ')
            print('4. –°—Ç–∞—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –±–æ—Ç–∞')
            print('\nüîí –≠—Ç–æ –∑–∞—â–∏—â–∞–µ—Ç –≤–∞—à userbot –æ—Ç –Ω–µ—Å–∞–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞')
            print('üí° –ü–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–ª–∞–¥–µ–ª—å—Ü–∞ –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å userbot')
            print('\n‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –ü–µ—Ä–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –Ω–∞–∂–∞–≤—à–∏–π /start, —Å—Ç–∞–Ω–µ—Ç –≤–ª–∞–¥–µ–ª—å—Ü–µ–º!')
            print('üîê –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —ç—Ç–æ –¥–µ–ª–∞–µ—Ç–µ –∏–º–µ–Ω–Ω–æ –≤—ã!')
            return False
        owner_info = self.get_owner_info()
        print(f'\n‚úÖ {app_name} - –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –ø—Ä–æ–π–¥–µ–Ω–∞')
        print('=' * 50)
        print(f"üëë –û—Å–Ω–æ–≤–Ω–æ–π –≤–ª–∞–¥–µ–ª–µ—Ü: {owner_info['primary_owner_id']}")
        print(f"üë• –í—Å–µ–≥–æ –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤: {owner_info['total_owners']}")
        print(f"üîê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞: {('–î–∞' if owner_info['setup_completed'] else '–ù–µ—Ç')}")
        print('üöÄ –ó–∞–ø—É—Å–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω!\n')
        return True

    def show_security_warning(self, app_name: str='Argent UserBot') -> None:
        print(f'\n‚ö†Ô∏è  {app_name} - –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏')
        print('=' * 50)
        print('üîê –≠—Ç–æ—Ç userbot –∑–∞—â–∏—â–µ–Ω —Å–∏—Å—Ç–µ–º–æ–π –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤')
        print('üëë –¢–æ–ª—å–∫–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –º–æ–≥—É—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –±–æ—Ç–æ–º')
        print('üö´ –ù–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø–æ–ª—É—á–∞—Ç –æ—Ç–∫–∞–∑ –≤ –¥–æ—Å—Ç—É–ø–µ')
        print('\nüí° –î–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–ª–∞–¥–µ–ª—å—Ü–∞–º–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ inline –±–æ—Ç')
        print('üì± –ö–æ–º–∞–Ω–¥–∞: /start –≤ –±–æ—Ç–µ')
        print('‚öôÔ∏è  –ù–∞—Å—Ç—Ä–æ–π–∫–∏ -> –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–ª–∞–¥–µ–ª—å—Ü–∞–º–∏')

    def validate_environment(self) -> bool:
        issues = []
        config_path = os.path.join(self.config_dir, 'owner_config.json')
        if os.path.exists(config_path):
            try:
                with open(config_path, 'r') as f:
                    f.read(1)
            except PermissionError:
                issues.append('‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ–∞–π–ª—É –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤')
            except Exception as e:
                issues.append(f'‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}')
        try:
            os.makedirs(self.config_dir, exist_ok=True)
        except PermissionError:
            issues.append(f'‚ùå –ù–µ—Ç –ø—Ä–∞–≤ –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ {self.config_dir}')
        except Exception as e:
            issues.append(f'‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏: {e}')
        if issues:
            print('\nüîí –ü—Ä–æ–±–ª–µ–º—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏:')
            for issue in issues:
                print(f'  {issue}')
            return False
        return True

    def emergency_reset(self) -> bool:
        try:
            self.owner_manager.reset_config()
            print('‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ —Å–±—Ä–æ—à–µ–Ω–∞!')
            print('üîÑ –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–Ω–æ–≤–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–∞ —á–µ—Ä–µ–∑ –≤–µ–±-—É—Å—Ç–∞–Ω–æ–≤—â–∏–∫')
            return True
        except Exception as e:
            print(f'‚ùå –û—à–∏–±–∫–∞ —Å–±—Ä–æ—Å–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}')
            return False

def check_startup_security(app_name: str='Argent UserBot', config_dir: str='.argent_data') -> bool:
    security = StartupSecurity(config_dir)
    if not security.validate_environment():
        print('‚ùå –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–∞')
        return False
    security.show_security_warning(app_name)
    return security.require_owner_setup(app_name)
